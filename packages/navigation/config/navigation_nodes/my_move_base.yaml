controller_frequency: 5.0
recovery_behaviour_enabled: false

GlobalPlanner:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.05 # A tolerance on the goal point for the planner.
  use_dijkstra: true # if false it uses A*
  use_quadratic: true
  use_grid_path: false
  old_navfn_behaviour: true # imitate navfn behaviour
  outline_map: true

# DWAPlannerROS:
#   # Robot configuration parameters  
#   acc_lim_x: 2
#   acc_lim_y: 0
#   acc_lim_th: 10

#   max_vel_x: 0.5
#   min_vel_x: 0.4
#   max_vel_y: 0
#   min_vel_y: 0

#   max_vel_trans: 0.5
#   min_vel_trans: 0.4
#   max_vel_theta: 9.0
#   min_vel_theta: 8.3

#   # Goal Tolerance Parameters
#   yaw_goal_tolerance: 0.2
#   xy_goal_tolerance: 0.08
#   latch_xy_goal_tolerance: false

  # # Forward Simulation Parameters
  # sim_time: 2.0
  # sim_granularity: 0.02
  # vx_samples: 6
  # vy_samples: 0
  # vtheta_samples: 20
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  # path_distance_bias: 32.0 # The weighting for how much the controller should stay close to the path it was given
  # goal_distance_bias: 24.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  # occdist_scale: 0.01 # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 0.1 # The distance from the center point of the robot to place an additional scoring point, in meters
  # stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)

TebLocalPlannerROS:

  # Robot
  acc_lim_x: 2
  acc_lim_theta: 10
  max_vel_x: 0.2
  max_vel_x_backwards: 0.2
  max_vel_theta: 5
  min_turning_radius: 0.0
  max_vel_y: 0.0
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "point"
    # vertices: [[-0.11, -0.065], [-0.11, 0.065], [0.11, 0.065], [0.11, -0.065]] # for type "polygon"

  # GoalTolerance
    
  xy_goal_tolerance: 0.05
  yaw_goal_tolerance: 0.1
  free_goal_vel: false

  # Trajectory

  max_global_plan_lookahead_dist: 1
  publish_feedback: false # disable when debugging is finished
    
  # Obstacles
    
  min_obstacle_dist: 0.09
  include_costmap_obstacles: false
  costmap_obstacles_behind_robot_dist: 0.3

  # Homotopy Class Planner

  enable_homotopy_class_planning: true
  enable_multithreading: true
  max_number_classes: 2
  roadmap_graph_area_width: 1

  # Miscellaneous Parameters

  odom_topic: odom
  map_frame: map